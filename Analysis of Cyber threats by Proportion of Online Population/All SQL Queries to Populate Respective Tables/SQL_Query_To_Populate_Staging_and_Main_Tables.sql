INSERT INTO IP_FACT_TABLE
SELECT D.IP_ID, E.LOC_ID, F.CAT_ID, G.DATEKEY AS FIRSTREPORTED, H.DATEKEY AS LASTREPORTED, B.COUNT AS TIMES_CATEGORY_REPORTED, (
CASE
WHEN ROW_NUMBER() OVER (PARTITION BY A.IP ORDER BY A.IP) = 1 THEN A.Reported ELSE 0 END
) TIMES_REPORTED, (
CASE
WHEN ROW_NUMBER() OVER (PARTITION BY A.COUNTRY ORDER BY A.COUNTRY) = 1 THEN C.INTERNET_USERS ELSE 0 END
) INTERNET_USERS, (
CASE
WHEN ROW_NUMBER() OVER (PARTITION BY A.COUNTRY ORDER BY A.COUNTRY) = 1 THEN C.PERCENT_INTERNET_USERS ELSE 0 END
) PERCENT_INTERNET_USERS
FROM STG_MALICIOUSIP A INNER JOIN (SELECT DISTINCT X.* FROM STG_CATEGORYCOUNT X) B ON A.IP = B.IP INNER JOIN STG_INTERNETUSERS C ON A.COUNTRY = C.COUNTRY
INNER JOIN DIM_IP D ON A.IP = D.IP INNER JOIN DIM_LOCATION E ON (A.COUNTRY = E.COUNTRY AND A.CITY = E.CITY) INNER JOIN
DIM_CATEGORY F ON B.Categories = F.CATEGORY INNER JOIN DIM_DATE G ON 
A.FirstReported = G.DATE INNER JOIN DIM_DATE H ON A.Lastreported = H.DATE

SELECT * FROM STG_INTERNETUSERS

CREATE TABLE DIM_IP(
IP_ID  INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
IP VARCHAR(50),
ISP VARCHAR(100),
USAGE_TYPE VARCHAR(100),
DOMAIN VARCHAR(100)
)

CREATE TABLE DIM_LOCATION(
LOC_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
REGION VARCHAR(50),
COUNTRY VARCHAR(50),
CITY VARCHAR(50),
Lowest_Rate_of_Malware_Infection VARCHAR(10),
Highest_Rate_of_Malware_Infection VARCHAR(10),
Highest_Number_of_Users_attacked_with_Ransomware VARCHAR(10),
Highest_percentage_of_DDoS_attacks VARCHAR(10),
Least_Amount_of_Freedom_on_net VARCHAR(10),
Highest_Amount_of_Freedom_on_net VARCHAR(10),
Most_Vulnerable_Countries_to_Hacking VARCHAR(10)
)


CREATE TABLE DIM_DATE(
DATEKEY INT NOT NULL PRIMARY KEY,
DATE DATETIME,
DAYOFMONTH INT,
MONTH INT,
QUARTER INT,
YEAR INT
)

CREATE TABLE DIM_CATEGORY(
CAT_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
CATEGORY VARCHAR(max),
CATEGORY_DESCRIPTION VARCHAR(max),
)

CREATE TABLE IP_FACT_TABLE(
IP_ID INT NOT NULL FOREIGN KEY REFERENCES DIM_IP(IP_ID) ,
LOCATION_ID INT NOT NULL FOREIGN KEY REFERENCES DIM_LOCATION(LOC_ID),
CATEGORY_ID INT NOT NULL FOREIGN KEY REFERENCES DIM_CATEGORY(CAT_ID),
FIRST_REPORTED_DATEKEY INT NOT NULL FOREIGN KEY REFERENCES DIM_DATE(DATEKEY) ,
LAST_REPORTED_DATEKEY INT NOT NULL FOREIGN KEY REFERENCES DIM_DATE(DATEKEY),
TIMES_CATEGORY_REPORTED INT,
TIMES_REPORTED INT,
INTERNET_USERS INT,
PERCENT_INTERNET_USERS INT
)
DROP TABLE IP_FACT_TABLE
INSERT INTO DIM_LOCATION
SELECT B.REGION, A.COUNTRY, A.CITY,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Lowest_Rate_of_Malware_Infection FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Lowest_Rate_of_Malware_Infection,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Highest_Rate_of_Malware_Infection FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Highest_Rate_of_Malware_Infection,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT
Highest_Number_of_Users_attacked_with_Ransomware FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Highest_Number_of_Users_attacked_with_Ransomware,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Highest_percentage_of_DDoS_attacks FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Highest_percentage_of_DDoS_attacks,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Least_Amount_of_Freedom_on_net FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Least_Amount_of_Freedom_on_net,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Highest_Amount_of_Freedom_on_net FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Highest_Amount_of_Freedom_on_net,
(CASE
WHEN
A.COUNTRY IN (SELECT DISTINCT Most_Vulnerable_Countries_to_Hacking FROM
STG_OTHERMETRICS) THEN 'Y' ELSE 'N' END)
Most_Vulnerable_Countries_to_Hacking

FROM STG_MALICIOUSIP A INNER JOIN STG_INTERNETUSERS B ON A.COUNTRY = B.COUNTRY 

SELECT * FROM DIM_IP

SELECT * FROM DIM_LOCATION

SELECT * FROM DIM_CATEGORY

CREATE TABLE STG_DATE(
DATEKEY AS CAST(CONVERT(VARCHAR(8), DATE, 112) AS INT),
DATE DATETIME,
DAYOFMONTH AS DATEPART(DAY, DATE),
MONTH AS DATEPART(MONTH, DATE),
QUARTER AS DATEPART(QUARTER, DATE),
YEAR AS DATEPART(YEAR, DATE)
)

CREATE TABLE [STG_INTERNETUSERS] (
    [REGION] varchar(60),
	[COUNTRY] varchar(60),
    [POPULATION] int,
	[INTERNET_USERS] int,
	[PERCENT_INTERNET_USERS] int
)

CREATE TABLE [dbo].[STG_MALICIOUSIP](
	[IP] [varchar](50) NULL,
	[ISP] [varchar](100) NULL,
	[USAGE_TYPE] [varchar](100) NULL,
	[DOMAIN] [varchar](100) NULL,
	[COUNTRY] [varchar](100) NULL,
	[CITY] [varchar](100) NULL,
	[Reported] [int] NULL,
	[FirstReported] [datetime] NULL,
	[Lastreported] [datetime] NULL
)


INSERT INTO STG_DATE
SELECT DISTINCT DATE FROM
(SELECT FirstReported AS DATE FROM STG_MALICIOUSIP
UNION SELECT Lastreported AS DATE FROM STG_MALICIOUSIP) A

DROP TABLE STG_MALICIOUSIP

INSERT INTO DIM_DATE SELECT * FROM STG_DATE

SELECT * FROM DIM_CATEGORY;
SELECT * FROM DIM_DATE;
SELECT * FROM DIM_IP;
SELECT * FROM DIM_LOCATION;
SELECT * FROM IP_FACT_TABLE;

SELECT * FROM STG_MALICIOUSIP;
SELECT * FROM STG_CATEGORYCOUNT;
SELECT * FROM STG_INTERNETUSERS;
SELECT * FROM STG_OTHERMETRICS;
SELECT * FROM STG_DATE;
SELECT * FROM STG_CATEGORY;

TRUNCATE TABLE DIM_CATEGORY
TRUNCATE TABLE DIM_DATE
TRUNCATE TABLE DIM_IP
TRUNCATE TABLE DIM_LOCATION
TRUNCATE TABLE IP_FACT_TABLE
TRUNCATE TABLE STG_MALICIOUSIP
TRUNCATE TABLE STG_CATEGORYCOUNT
TRUNCATE TABLE STG_INTERNETUSERS
TRUNCATE TABLE STG_OTHERMETRICS
TRUNCATE TABLE STG_DATE
TRUNCATE TABLE STG_CATEGORY


INSERT INTO DIM_CATEGORY(CATEGORY, CATEGORY_DESCRIPTION)
SELECT DISTINCT A.Categories, B.Description FROM STG_CATEGORYCOUNT A LEFT OUTER JOIN STG_CATEGORY B
ON A.Categories = B.Title

SELECT * FROM STG_CATEGORYCOUNT A INNER JOIN STG_CATEGORY B ON A.Categories = B.Title

ALTER TABLE DIM_IP ALTER COLUMN DOMAIN VARCHAR(100)